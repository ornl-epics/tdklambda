####  Macro Definitions  ####
# (bl)	- Beam Line
# (ta)	- Target Area
# (dn)	- Device Name

###############
# =============   Output Control PV's   =============
###############
# Obtain the Command Acknowledge response - usually just "OK"
record(stringin, "$(bl):$(ta):$(dn):CommandACK")
{
	field(DESC,	"Read PS ACK String")
	field(OVAL,	"OK")
	field(ZSVR,	"NO_ALARM")
	field(OSVR,	"MAJOR")
}

# -----------
# Get voltage setpoint from the power supply
record(ai, "$(bl):$(ta):$(dn):VoltValue")
{
	field(DESC,	"Read Volts Set at Supply")
	field(SCAN,	"1 second")
	field(PINI,	"YES")
	field(EGU,	"V")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.v tdk232")
	field(MDEL,	"0.01")
	field(FLNK,	"$(bl):$(ta):$(dn):VoltActual")
	info(archive,	"Monitor, 00:01:00, VAL")
}

# Get Measured Voltage from the power supply
record(ai, "$(bl):$(ta):$(dn):VoltActual")
{
	field(DESC,	"Read Supply Voltage")
	field(SCAN,	"Passive")
	field(EGU,	"V")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-meas.v tdk232")
	field(MDEL,	"0.01")
	info(archive,	"Monitor, 00:01:00, VAL")
}

# Set Voltage on the power supply
record(ao, "$(bl):$(ta):$(dn):VoltSet")
{
	field(DESC,	"Set Voltage")
	field(SCAN,	"Passive")
	field(EGU,	"V")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.v($(bl):$(ta):$(dn)) tdk232")
	info(autosaveFields, "VAL")
}

# -----------
# Get requested current setpoint from the power supply
record(ai, "$(bl):$(ta):$(dn):AmpsValue")
{
	field(DESC,	"Read Amps Set at Supply")
	field(SCAN,	"1 second")
	field(PINI,	"YES")
	field(EGU,	"A")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.c tdk232")
	field(MDEL,	"0.05")
	field(FLNK,	"$(bl):$(ta):$(dn):AmpsActual")
	info(archive,	"Monitor, 00:01:00, VAL")
}

# Get measured current from the power supply
record(ai, "$(bl):$(ta):$(dn):AmpsActual")
{
	field(DESC,	"Read Supply Current")
	field(SCAN,	"Passive")
	field(PINI,	"YES")
	field(EGU,	"A")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-meas.c tdk232")
	field(MDEL,	"0.05")
}

# Program current supply
record(ao, "$(bl):$(ta):$(dn):AmpsSet")
{
	field(DESC,	"Set Current")
	field(SCAN,	"Passive")
	field(EGU,	"A")
	field(PREC,	"3")
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.c($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Get the output status
record (bi,  "$(bl):$(ta):$(dn):GetOutput")
{
	field(DESC,	"Get Supply Status, Off/On")
	field(SCAN,	"1 second")
	field(PINI,	"YES")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(INP,	"@tdklambda-rs232.proto PSU-get.out tdk232")
}

# Set the output state
record (bo,  "$(bl):$(ta):$(dn):SetOutput")
{
	field(DESC,	"Set Supply Status, Off/On")
	field(SCAN,	"Passive")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.out($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Get the filter value
record (mbbi,  "$(bl):$(ta):$(dn):GetFilter")
{
	field(DESC,	"Get Filter Val- 18,23,46")
	field(SCAN,	"2 second")
	field(PINI,	"YES")
	field(DTYP,	"stream")
	field(ZRVL,	"0")
	field(ZRST,	"18")
	field(ONVL,	"1")
	field(ONST,	"23")
	field(TWVL,	"2")
	field(TWST,	"46")
	field(INP,	"@tdklambda-rs232.proto PSU-get.fltr tdk232")
}

# Set the filter value
record (mbbo,  "$(bl):$(ta):$(dn):SetFilter")
{
	field(DESC,	"Set Filter Val- 18,23,46")
	field(SCAN,	"Passive")
	field(DTYP,	"stream")
	field(ZRVL,	"0")
	field(ZRST,	"18")
	field(ONVL,	"1")
	field(ONST,	"23")
	field(TWVL,	"2")
	field(TWST,	"46")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.fltr($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Get the power supply foldback current limiting status
record (bi,  "$(bl):$(ta):$(dn):GetFldbStatus")
{
	field(DESC,	"Get Amps Foldback Status")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(INP,	"@tdklambda-rs232.proto PSU-get.fld tdk232")
}

# Enable the power supply foldback current limiting status
record (bo,  "$(bl):$(ta):$(dn):SetFoldback")
{
	field(DESC,	"Enable Amps Foldback Limit")
	field(SCAN,	"Passive")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.fld($(bl):$(ta):$(dn)) tdk232")
	field(FLNK,	"$(bl):$(ta):$(dn):GetOutput")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# Get foldback delay: Range is 0 to 25.5 seconds which translates to decimal 
# values of 0-255
record(ai,  "$(bl):$(ta):$(dn):GetFldbDelay")
{
	field(DESC,	"Get Foldback Limit Value")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(EGU,	"s")
	field(LINR,	"LINEAR")
	field(EGUL,	"0")
	field(EGUF,	"25.5")
	field(ESLO,	".1")
	field(PREC,	"1")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.fbd tdk232")
}

# Set foldback delay: Range is 0 to 25.5 seconds which translates to decimal 
# values of 0-255
record(ao,  "$(bl):$(ta):$(dn):SetFldbDelay")
{
	field(DESC,	"Set Foldback Limit Value")
	field(SCAN,	"Passive")
	field(EGU,	"s")
	field(HOPR,	"25.5")
	field(LOPR,	"0")
	field(DRVH,	"25.5")
	field(DRVL,	"0")
	field(LINR,	"LINEAR")
	field(EGUL,	"0")
	field(EGUF,	"255")
	field(ESLO,	".1")
	field(PREC,	"1")
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.fbd($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# Reset foldback delay
record(bo,  "$(bl):$(ta):$(dn):ResetFldbDelay")
{
	field(DESC,	"Reset Foldback Values")
	field(ZNAM,	"Reset Foldback Delay")
	field(ONAM,	"Resetting Foldback Delay")
	field(VAL,	"0")
	field(HIGH,	"0.5")
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-reset.fbd($(bl):$(ta):$(dn)) tdk232")
}

# -----------
# Define the maximum voltage limit, default to limits set by the manual
record(ao, "$(bl):$(ta):$(dn):VoltMax")
{
	field(DESC,	"Set Maximum Voltage Limit")
	field(SCAN,	"Passive")
	field(PINI,	"YES")
	field(DOL,	"65")
	field(EGU,	"V")
	field(PREC,	"2")
	field(HOPR,	"150")
	field(LOPR,	"0")
	field(DRVH,	"150")
	field(DRVL,	"0")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# Define the maximum current limit, permissable limits set by the manual
record(ao, "$(bl):$(ta):$(dn):AmpsMax") 
{
	field(DESC,	"Set Maximum Current Limit")
	field(SCAN,	"Passive")
	field(PINI,	"YES")
	field(EGU,	"A")
	field(PREC,	"2")
	field(HOPR,	"66")
	field(LOPR,	"0")
	field(DRVH,	"66")
	field(DRVL,	"0")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# Get the overVoltage value from the power supply
record(ai,  "$(bl):$(ta):$(dn):GetOVP")
{
	field(DESC,	"Read Over Voltage Limit")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(EGU,	"V")
	field(PREC,	"2")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.ovp tdk232")
}

# Set voltage protection range
record(ao,  "$(bl):$(ta):$(dn):SetOVP")
{
	field(DESC,	"Set Over Voltage Limit")
	field(SCAN,	"Passive")
	field(PINI,	"YES")
	field(EGU,	"V")
	field(PREC,	"1")
	field(HOPR,	"600") # Highest value listed in manual
	field(LOPR,	"0")
	field(DRVH,	"165")
	field(DRVL,	"7.5") # Lowest rated power supply
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.ovp($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Get the underVoltage value from the power supply
record(ai,  "$(bl):$(ta):$(dn):GetUVL")
{
	field(DESC,	"Get Under Voltage Limit")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(EGU,	"V")
	field(PREC,	"1")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.uvl tdk232")
}

# Set the under voltage value
record(ao,  "$(bl):$(ta):$(dn):SetUVL")
{
	field(DESC,	"Set Under Voltage Limit")
	field(SCAN,	"Passive")
	field(PINI,	"YES")
	field(EGU,	"V")
	field(PREC,	"1")
	field(HOPR,	"142.5")
	field(LOPR,	"0")
	field(DRVH,	"142.5")
	field(DRVL,	"0")
	field(DTYP,	"stream")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.uvl($(bl):$(ta):$(dn)) tdk232")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Read the auto-start mode
record (bi,  "$(bl):$(ta):$(dn):GetAStart")
{
	field(DESC,	"Read Auto-Start from PS")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(INP,	"@tdklambda-rs232.proto PSU-get.ast tdk232")
}

# Set the auto-start mode
record (bo,  "$(bl):$(ta):$(dn):SetAStart")
{
	field(DESC,	"Set Auto-Start")
	field(SCAN,	"Passive")
	field(DTYP,	"stream")
	field(ZNAM,	"Off")
	field(ONAM,	"On")
	field(OUT,	"@tdklambda-rs232.proto PSU-set.ast($(bl):$(ta):$(dn)) tdk232")
	field(FLNK,	"$(bl):$(ta):$(dn):GetAStart")
	info(archive,	"Monitor, 00:01:00, VAL")
	info(autosaveFields, "VAL")
}

# -----------
# Read the power supply output mode
record (stringin,  "$(bl):$(ta):$(dn):GetOpMode")
{
	field(DESC,	"Read PS Moder: LOC,REM,LLO")
	field(SCAN,	"5 second")
	field(PINI,	"YES")
	field(DTYP,	"stream")
	field(INP,	"@tdklambda-rs232.proto PSU-get.mode tdk232")
}

